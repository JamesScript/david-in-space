{"version":3,"sources":["../countAndSpawn.js"],"names":["CountRegister","currentLevel","sinceLastMeteorite","nextMeteorite","Math","floor","random","enemyWait","levelFrame","levelLengthsInReality","levelLengths","timeoutSet","toothAlienInterval","undefined","toothAlienIntervalSet","normalEnemyTimeoutSet","skullAlienTimeoutSet","meteoriteTimeoutSet","bacteriophageTimeoutSet","bossSpawned","bossKilled","gameOver","finalMessages","messageSlice","slice","messageTimeoutSet","bonusLevelSpawnFrequency","createLevelLengthsArray","i","length","push","go","level","indexOf","shop","restock","clearInterval","ctx","fillStyle","textAlign","fillText","width","height","totalScore","p1","score","totalSpent","setTimeout","personalBest","setCookie","toString","isMobile","mouse","x","y","Player","enemies","Enemy","GreenAlien","Meteorite","interlude","SkullAlien","xGap","setInterval","initialHeight","ToothAlien","rndSpawnTime","rnd","ceil","Boss","EyeballAlien","enemyChoices","TongueAlien","Bacteriophage","stars","speed","gameComplete","stage","lvl","shift","globalAlpha","fillRect","message","arr","split","lines","toConcat","concat","console","log"],"mappings":";;AAAA,SAASA,aAAT,GAAyB;AAAA;;AACrB,SAAKC,YAAL,GAAoB,CAApB,CADqB,CACE;AACvB,SAAKC,kBAAL,GAA0B,CAA1B;AACA,SAAKC,aAAL,GAAqBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,IAAkC,EAAvD;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,qBAAL,GAA6B,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,CAA7B;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,kBAAL,GAA0BC,SAA1B;AACA,SAAKC,qBAAL,GAA6B,KAA7B;AACA,SAAKC,qBAAL,GAA6B,KAA7B;AACA,SAAKC,oBAAL,GAA4B,KAA5B;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AACA,SAAKC,uBAAL,GAA+B,KAA/B;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqB,CACjB,mBADiB,EAEjB,2DAFiB,EAGjB,qDAHiB,EAIjB,qCAJiB,EAKjB,4DALiB,EAMjB,kEANiB,EAOjB,sEAPiB,EAQjB,oEARiB,EASjB,yCATiB,CAArB;AAWA,SAAKC,YAAL,GAAoB,KAAKD,aAAL,CAAmBE,KAAnB,EAApB;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,wBAAL,GAAgC,IAAhC;AACA,SAAKC,uBAAL,GAA+B,YAAM;AACjC,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,MAAKnB,qBAAL,CAA2BoB,MAA/C,EAAuDD,GAAvD,EAA4D;AACxD,kBAAKlB,YAAL,CAAkBoB,IAAlB,CAAuB,CAAvB;AACA,kBAAKpB,YAAL,CAAkBoB,IAAlB,CAAuB,MAAKrB,qBAAL,CAA2BmB,CAA3B,CAAvB;AACH;AACD,cAAKlB,YAAL,CAAkBoB,IAAlB,CAAuB,CAAvB;AACH,KAND;AAOA,SAAKC,EAAL,GAAU,YAAM;AACZ,cAAKC,KAAL,CAAW,MAAK/B,YAAhB;AACA,YAAI,MAAKA,YAAL,GAAoB,CAApB,KAA0B,CAA1B,IAA+B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAYgC,OAAZ,CAAoB,MAAKhC,YAAzB,MAA2C,CAAC,CAA/E,EAAkF;AAC9E,kBAAKO,UAAL;AACH;AACD,YAAI,MAAKA,UAAL,IAAmB,MAAKE,YAAL,CAAkB,MAAKT,YAAvB,CAAvB,EAA6D;AACzD,kBAAKO,UAAL,GAAkB,CAAlB;AACA,kBAAKP,YAAL;AACAiC,iBAAKC,OAAL;AACH;AACJ,KAVD;AAWA,SAAKH,KAAL,GAAa;AACT,YAAI,aAAM;AACN,gBAAI,MAAKlB,qBAAT,EAAgC;AAC5BsB,8BAAc,MAAKxB,kBAAnB;AACA,sBAAKE,qBAAL,GAA6B,KAA7B;AACH;AACDuB,gBAAIC,SAAJ,GAAgB,SAAhB;AACAD,gBAAIE,SAAJ,GAAc,QAAd;AACAF,gBAAIG,QAAJ,CAAa,WAAb,EAA0BC,QAAQ,CAAlC,EAAqCC,SAAS,CAA9C;AACA,gBAAIC,aAAaC,GAAGC,KAAH,GAAWD,GAAGE,UAA/B;AACAT,gBAAIG,QAAJ,CAAa,kBAAkBG,UAA/B,EAA2CF,QAAQ,CAAnD,EAAsDC,SAAS,GAA/D;AACA,gBAAI,CAAC,MAAKrB,QAAV,EAAoB;AAChB0B,2BAAW,YAAM;AACb,wBAAIJ,aAAaK,YAAjB,EAA+B;AAC3BC,kCAAU,WAAV,EAAuBN,WAAWO,QAAX,EAAvB,EAA8C,GAA9C;AACAF,uCAAeL,UAAf;AACH;AACD,wBAAIQ,QAAJ,EAAcC,MAAMC,CAAN,GAAUD,MAAME,CAAN,GAAU,CAApB;AACd,0BAAKrD,YAAL,GAAoB,CAApB;AACA2C,yBAAK,IAAIW,MAAJ,EAAL;AACAC,8BAAU,EAAV;AACA,0BAAKnC,QAAL,GAAgB,KAAhB;AACH,iBAVD,EAUG,IAVH;AAWA,sBAAKA,QAAL,GAAgB,IAAhB;AACH;AACJ,SAzBQ;AA0BT,WAAG,aAAM;AACL,gBAAIjB,KAAKE,MAAL,KAAgB,IAApB,EAA0B;AACtBkD,wBAAQ1B,IAAR,CAAa,IAAI2B,KAAJ,CAAUrD,KAAKE,MAAL,KAAgBmC,KAA1B,EAAiC,CAAjC,CAAb;AACA,sBAAKlC,SAAL,GAAiB,CAAjB;AACH,aAHD,MAGO;AACH,sBAAKA,SAAL;AACA,oBAAI,MAAKA,SAAL,IAAkB,GAAtB,EAA2B;AACvBiD,4BAAQ1B,IAAR,CAAa,IAAI4B,UAAJ,CAAejB,QAAQ,CAAvB,EAA0B,CAA1B,CAAb;AACA,0BAAKlC,SAAL,GAAiB,CAAjB;AACH;AACJ;AACD,gBAAI,MAAKL,kBAAL,IAA2B,MAAKC,aAApC,EAAmD;AAC/CqD,wBAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,sBAAKJ,kBAAL,GAA0B,CAA1B;AACA,sBAAKC,aAAL,GAAqBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,IAAkC,EAAvD;AACH,aAJD,MAIO;AACH,sBAAKJ,kBAAL;AACH;AACJ,SA5CQ;AA6CT,WAAG,aAAM;AACL,kBAAK0D,SAAL;AACH,SA/CQ;AAgDT,WAAG,aAAM;AACL,gBAAIxD,KAAKE,MAAL,KAAgB,KAApB,EAA2B;AACvBkD,wBAAQ1B,IAAR,CAAa,IAAI2B,KAAJ,CAAUrD,KAAKE,MAAL,KAAgBmC,KAA1B,EAAiC,CAAjC,CAAb;AACA,sBAAKlC,SAAL,GAAiB,CAAjB;AACH,aAHD,MAGO;AACH,sBAAKA,SAAL;AACA,oBAAI,MAAKA,SAAL,IAAkB,GAAtB,EAA2B;AACvBiD,4BAAQ1B,IAAR,CAAa,IAAI4B,UAAJ,CAAejB,QAAQ,CAAvB,EAA0B,CAA1B,CAAb;AACA,0BAAKlC,SAAL,GAAiB,CAAjB;AACH;AACJ;AACD,gBAAIH,KAAKE,MAAL,KAAgB,IAApB,EAA0B;AACtBkD,wBAAQ1B,IAAR,CAAa,IAAI+B,UAAJ,CAAezD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,IAAgC,EAA/C,EAAmD,CAAnD,CAAb;AACH;AACD,gBAAI,MAAKvC,kBAAL,IAA2B,MAAKC,aAApC,EAAmD;AAC/CqD,wBAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,sBAAKJ,kBAAL,GAA0B,CAA1B;AACA,sBAAKC,aAAL,GAAqBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,IAAkC,EAAvD;AACH,aAJD,MAIO;AACH,sBAAKJ,kBAAL;AACH;AACJ,SArEQ;AAsET,WAAG,aAAM;AACL,kBAAK0D,SAAL;AACH,SAxEQ;AAyET,WAAG,aAAM;AACL,gBAAI,CAAC,MAAK9C,qBAAV,EAAiC;AAC7B,oBAAIgD,OAAOrB,QAAQ,CAAnB;AACA,sBAAK7B,kBAAL,GAA0BmD,YAAY,YAAM;AACxC,yBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,4BAAIoC,gBAAgBpC,IAAI,CAAJ,KAAU,CAAV,GAAc,CAAd,GAAkB,CAAC,GAAvC;AACA4B,gCAAQ1B,IAAR,CAAa,IAAImC,UAAJ,CAAeH,QAAQlC,IAAE,CAAV,CAAf,EAA6BoC,aAA7B,CAAb;AACH;AACJ,iBALyB,EAKvB,IALuB,CAA1B;AAMA,sBAAKlD,qBAAL,GAA6B,IAA7B;AACH;AACD,gBAAI,CAAC,MAAKC,qBAAV,EAAiC;AAC7B,oBAAImD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACb,wBAAIoB,MAAM/D,KAAKgE,IAAL,CAAUhE,KAAKE,MAAL,KAAgB,CAA1B,CAAV;AACA,wBAAIwD,OAAOrB,QAAQ0B,GAAnB;AACA,yBAAK,IAAIvC,IAAI,CAAb,EAAgBA,IAAIuC,GAApB,EAAyBvC,GAAzB,EAA8B;AAC1B4B,gCAAQ1B,IAAR,CAAa,IAAI2B,KAAJ,CAAUK,QAAQlC,IAAE,CAAV,CAAV,EAAwB,IAAIxB,KAAKE,MAAL,KAAgB,GAA5C,CAAb;AACH;AACD,0BAAKS,qBAAL,GAA6B,KAA7B;AACH,iBAPD,EAOGmD,YAPH;AAQA,sBAAKnD,qBAAL,GAA6B,IAA7B;AACH;AACD,gBAAI,CAAC,MAAKE,mBAAV,EAA+B;AAC3B,oBAAIiD,gBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,aAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACJ,SAxGQ;AAyGT,WAAG,aAAM;AACL,gBAAI,MAAKH,qBAAT,EAAgC;AAC5BsB,8BAAc,MAAKxB,kBAAnB;AACA,sBAAKE,qBAAL,GAA6B,KAA7B;AACH;AACD,kBAAK8C,SAAL;AACH,SA/GQ;AAgHT,WAAG,aAAM;AACL,gBAAI,CAAC,MAAK5C,oBAAV,EAAgC;AAC5B,oBAAIkD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,IAAkC,GAArD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI+B,UAAJ,CAAezD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA3D,EAA+D,CAA/D,CAAb;AACA,0BAAKzB,oBAAL,GAA4B,KAA5B;AACH,iBAHD,EAGGkD,YAHH;AAIA,sBAAKlD,oBAAL,GAA4B,IAA5B;AACH;AACD,gBAAI,CAAC,MAAKC,mBAAV,EAA+B;AAC3B,oBAAIiD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,cAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACD,gBAAI,CAAC,MAAKH,qBAAV,EAAiC;AAC7B,oBAAIgD,OAAOrB,QAAQ,CAAnB;AACA,sBAAK7B,kBAAL,GAA0BmD,YAAY,YAAM;AACxC,yBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,4BAAIoC,gBAAgBpC,IAAI,CAAJ,KAAU,CAAV,GAAc,CAAd,GAAkB,CAAC,GAAvC;AACA4B,gCAAQ1B,IAAR,CAAa,IAAImC,UAAJ,CAAeH,QAAQlC,IAAE,CAAV,CAAf,EAA6BoC,aAA7B,CAAb;AACH;AACJ,iBALyB,EAKvB,IALuB,CAA1B;AAMA,sBAAKlD,qBAAL,GAA6B,IAA7B;AACH;AACJ,SA3IQ;AA4IT,WAAG,aAAM;AACL,gBAAI,MAAKA,qBAAT,EAAgC;AAC5BsB,8BAAc,MAAKxB,kBAAnB;AACA,sBAAKE,qBAAL,GAA6B,KAA7B;AACH;AACD,kBAAK8C,SAAL;AACH,SAlJQ;AAmJT,WAAG,aAAM;AACL,gBAAI,CAAC,MAAKzC,WAAV,EAAuB;AACnBqC,wBAAQ1B,IAAR,CAAa,IAAIuC,IAAJ,CAAS5B,QAAQ,CAAjB,EAAoB,CAApB,CAAb;AACA,sBAAKtB,WAAL,GAAmB,IAAnB;AACH;AACD,gBAAI,CAAC,MAAKF,mBAAN,IAA6B,CAAC,MAAKG,UAAvC,EAAmD;AAC/C,oBAAI8C,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,YAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACD,gBAAIuC,QAAQ3B,MAAR,KAAmB,CAAvB,EAA0B;AACtB,sBAAK5B,YAAL,GAAoB,EAApB;AACA,sBAAKkB,WAAL,GAAmB,MAAKC,UAAL,GAAkB,KAArC;AACH;AACJ,SApKQ;AAqKT,YAAI,aAAM;AACN,kBAAKwC,SAAL;AACH,SAvKQ;AAwKT,YAAI,aAAM;AACN,gBAAIxD,KAAKE,MAAL,KAAgB,IAApB,EAA0B;AACtBkD,wBAAQ1B,IAAR,CAAa,IAAIwC,YAAJ,CAAiBlE,KAAKE,MAAL,KAAgBmC,KAAjC,EAAwC,CAAxC,CAAb;AACA,sBAAKlC,SAAL,GAAiB,CAAjB;AACH,aAHD,MAGO;AACH,sBAAKA,SAAL;AACA,oBAAI,MAAKA,SAAL,IAAkB,GAAtB,EAA2B;AACvBiD,4BAAQ1B,IAAR,CAAa,IAAI4B,UAAJ,CAAejB,QAAQ,CAAvB,EAA0B,CAA1B,CAAb;AACA,0BAAKlC,SAAL,GAAiB,CAAjB;AACH;AACJ;AACD,gBAAI,CAAC,MAAKU,mBAAV,EAA+B;AAC3B,oBAAIiD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,YAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACJ,SA3LQ;AA4LT,YAAI,aAAM;AACN,kBAAK2C,SAAL;AACH,SA9LQ;AA+LT,YAAI,aAAM;AACN,gBAAI,CAAC,MAAK7C,qBAAV,EAAiC;AAC7B,oBAAImD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,IAAkC,EAArD;AACA,oBAAIiE,eAAe,CAACd,KAAD,EAAQI,UAAR,EAAoBS,YAApB,CAAnB;AACAvB,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAIyC,aAAanE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBiE,aAAa1C,MAAxC,CAAb,CAAJ,CAAkEzB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA9G,EAAkH,CAAlH,CAAb;AACA,0BAAK1B,qBAAL,GAA6B,KAA7B;AACH,iBAHD,EAGGmD,YAHH;AAIA,sBAAKnD,qBAAL,GAA6B,IAA7B;AACH;AACD,gBAAI,CAAC,MAAKE,mBAAV,EAA+B;AAC3B,oBAAIiD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,cAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACJ,SAjNQ;AAkNT,YAAI,aAAM;AACN,kBAAK2C,SAAL;AACH,SApNQ;AAqNT,YAAI,aAAM;AACN,gBAAI,CAAC,MAAK7C,qBAAV,EAAiC;AAC7B,oBAAImD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACA,oBAAIiE,eAAe,CAACd,KAAD,EAAQI,UAAR,EAAoBS,YAApB,EAAkCE,WAAlC,CAAnB;AACAzB,2BAAW,YAAM;AACb,wBAAIoB,MAAM/D,KAAKgE,IAAL,CAAUhE,KAAKE,MAAL,KAAgB,CAA1B,CAAV;AACA,wBAAIwD,OAAOrB,SAAS0B,MAAM,CAAf,CAAX;AACA,yBAAK,IAAIvC,IAAI,CAAb,EAAgBA,IAAIuC,GAApB,EAAyBvC,GAAzB,EAA8B;AAC1B4B,gCAAQ1B,IAAR,CAAa,IAAIyC,aAAanE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBiE,aAAa1C,MAAxC,CAAb,CAAJ,CAAkEiC,QAAQlC,IAAE,CAAV,CAAlE,EAAgF,IAAIxB,KAAKE,MAAL,KAAgB,GAApG,CAAb;AACH;AACD,0BAAKS,qBAAL,GAA6B,KAA7B;AACH,iBAPD,EAOGmD,YAPH;AAQA,sBAAKnD,qBAAL,GAA6B,IAA7B;AACA,sBAAKA,qBAAL,GAA6B,IAA7B;AACH;AACD,gBAAI,CAAC,MAAKE,mBAAV,EAA+B;AAC3B,oBAAIiD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,cAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACD,gBAAI,CAAC,MAAKH,qBAAV,EAAiC;AAC7B,oBAAIgD,OAAOrB,QAAQ,CAAnB;AACA,sBAAK7B,kBAAL,GAA0BmD,YAAY,YAAM;AACxC,yBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,4BAAIoC,gBAAgBpC,IAAI,CAAJ,KAAU,CAAV,GAAc,CAAd,GAAkB,CAAC,GAAvC;AACA4B,gCAAQ1B,IAAR,CAAa,IAAImC,UAAJ,CAAeH,QAAQlC,IAAE,CAAV,CAAf,EAA6BoC,aAA7B,CAAb;AACH;AACJ,iBALyB,EAKvB,IALuB,CAA1B;AAMA,sBAAKlD,qBAAL,GAA6B,IAA7B;AACH;AACJ,SAtPQ;AAuPT,YAAI,aAAM;AACN,gBAAI,MAAKA,qBAAT,EAAgC;AAC5BsB,8BAAc,MAAKxB,kBAAnB;AACA,sBAAKE,qBAAL,GAA6B,KAA7B;AACH;AACD,kBAAK8C,SAAL;AACH,SA7PQ;AA8PT,YAAI,aAAM;AACN,gBAAI,CAAC,MAAK7C,qBAAV,EAAiC;AAC7B,oBAAImD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACA,oBAAIiE,eAAe,CAACd,KAAD,EAAQI,UAAR,EAAoBS,YAApB,EAAkCL,UAAlC,EAA8CO,WAA9C,CAAnB;AACAzB,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAIyC,aAAanE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBiE,aAAa1C,MAAxC,CAAb,CAAJ,CAAkEzB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA9G,EAAkH,CAAlH,CAAb;AACA,0BAAK1B,qBAAL,GAA6B,KAA7B;AACH,iBAHD,EAGGmD,YAHH;AAIA,sBAAKnD,qBAAL,GAA6B,IAA7B;AACH;AACD,gBAAI,CAAC,MAAKG,uBAAV,EAAmC;AAC/B,oBAAIgD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI2C,aAAJ,CAAkBrE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA9D,EAAkE,CAAlE,EAAqErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAArG,CAAb;AACA,0BAAKY,uBAAL,GAA+B,KAA/B;AACH,iBAHD,EAGGgD,cAHH;AAIA,sBAAKhD,uBAAL,GAA+B,IAA/B;AACH;AACD,gBAAI,CAAC,MAAKD,mBAAV,EAA+B;AAC3B,oBAAIiD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,cAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACJ,SAxRQ;AAyRT,YAAI,aAAM;AACN,kBAAK2C,SAAL;AACH,SA3RQ;AA4RT,YAAI,aAAM;AACN,gBAAI,CAAC,MAAKzC,WAAV,EAAuB;AACnBqC,wBAAQ1B,IAAR,CAAa,IAAIuC,IAAJ,CAAS5B,QAAQ,CAAjB,EAAoB,CAApB,CAAb;AACA,sBAAKtB,WAAL,GAAmB,IAAnB;AACH;AACD,gBAAI,CAAC,MAAKF,mBAAN,IAA6B,CAAC,MAAKG,UAAvC,EAAmD;AAC/C,oBAAI8C,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,YAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACD,gBAAIuC,QAAQ3B,MAAR,KAAmB,CAAvB,EAA0B;AACtB,qBAAK,IAAID,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AACzBM,yBAAKC,OAAL;AACH;AACD,sBAAKlC,YAAL,GAAoB,EAApB;AACA,sBAAKkB,WAAL,GAAmB,MAAKC,UAAL,GAAkB,KAArC;AACA,oBAAI,MAAKG,YAAL,CAAkBM,MAAlB,KAA6B,CAAjC,EAAoC,MAAKN,YAAL,GAAoB,MAAKD,aAAL,CAAmBE,KAAnB,EAApB;AACvC;AACJ,SAjTQ;AAkTT,YAAI,aAAM;AACN,gBAAI,MAAKE,wBAAL,GAAgC,IAApC,EAA0C,MAAKA,wBAAL,GAAgC,IAAhC;AAC1C,gBAAI,MAAKH,YAAL,CAAkBM,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B,qBAAK,IAAID,IAAI,CAAb,EAAgBA,IAAI8C,MAAM7C,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC8C,0BAAM9C,CAAN,EAAS+C,KAAT,IAAkB,IAAlB;AACH;AACJ;AACD,kBAAKC,YAAL;AACH,SA1TQ;AA2TT,YAAI,aAAM;AACN,gBAAI,CAAC,MAAK7D,qBAAV,EAAiC;AAC7B,oBAAImD,eAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,MAAKoB,wBAAhC,IAA4D,GAA/E;AACA,oBAAI6C,eAAe,CAACd,KAAD,EAAQC,UAAR,EAAoBG,UAApB,EAAgCS,YAAhC,EAA8CL,UAA9C,EAA0DO,WAA1D,CAAnB;AACAzB,2BAAW,YAAM;AACb,wBAAIoB,MAAM/D,KAAKgE,IAAL,CAAUhE,KAAKE,MAAL,KAAgB,CAA1B,CAAV;AACA,wBAAIwD,OAAOrB,SAAS0B,MAAM,CAAf,CAAX;AACA,yBAAK,IAAIvC,IAAI,CAAb,EAAgBA,IAAIuC,GAApB,EAAyBvC,GAAzB,EAA8B;AAC1B4B,gCAAQ1B,IAAR,CAAa,IAAIyC,aAAanE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBiE,aAAa1C,MAAxC,CAAb,CAAJ,CAAkEiC,QAAQlC,IAAE,CAAV,CAAlE,EAAgF,IAAIxB,KAAKE,MAAL,KAAgB,GAApG,CAAb;AACH;AACD,wBAAI,MAAKoB,wBAAL,GAAgC,EAApC,EAAwC,MAAKA,wBAAL,IAAiC,EAAjC;AACxC,0BAAKX,qBAAL,GAA6B,KAA7B;AACH,iBARD,EAQGmD,YARH;AASA,sBAAKnD,qBAAL,GAA6B,IAA7B;AACH;AACD,gBAAI,CAAC,MAAKG,uBAAV,EAAmC;AAC/B,oBAAIgD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI2C,aAAJ,CAAkBrE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA9D,EAAkE,CAAlE,EAAqErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAArG,CAAb;AACA,0BAAKY,uBAAL,GAA+B,KAA/B;AACH,iBAHD,EAGGgD,cAHH;AAIA,sBAAKhD,uBAAL,GAA+B,IAA/B;AACH;AACD,gBAAI,CAAC,MAAKD,mBAAV,EAA+B;AAC3B,oBAAIiD,iBAAe9D,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,IAA3B,IAAmC,GAAtD;AACAyC,2BAAW,YAAM;AACbS,4BAAQ1B,IAAR,CAAa,IAAI6B,SAAJ,CAAcvD,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBmC,QAAQ,GAAzB,CAAX,IAA4C,EAA1D,EAA8D,CAA9D,EAAiErC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,IAAgC,CAAjG,CAAb;AACA,0BAAKW,mBAAL,GAA2B,KAA3B;AACH,iBAHD,EAGGiD,cAHH;AAIA,sBAAKjD,mBAAL,GAA2B,IAA3B;AACH;AACD,gBAAI,CAAC,MAAKH,qBAAV,EAAiC;AAC7B,oBAAIgD,OAAOrB,QAAQ,CAAnB;AACA,sBAAK7B,kBAAL,GAA0BmD,YAAY,YAAM;AACxC,yBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,4BAAIoC,gBAAgBpC,IAAI,CAAJ,KAAU,CAAV,GAAc,CAAd,GAAkB,CAAC,GAAvC;AACA4B,gCAAQ1B,IAAR,CAAa,IAAImC,UAAJ,CAAeH,QAAQlC,IAAE,CAAV,CAAf,EAA6BoC,aAA7B,CAAb;AACH;AACJ,iBALyB,EAKvB,IALuB,CAA1B;AAMA,sBAAKlD,qBAAL,GAA6B,IAA7B;AACH;AACJ;AApWQ,KAAb;AAsWA,SAAK8C,SAAL,GAAiB,YAAM;AACnB,YACIJ,QAAQ3B,MAAR,KAAmB,CAAnB,IACGK,KAAK2C,KAAL,KAAe,CADlB,IAEG,MAAK/D,qBAAL,KAA+B,KAFlC,IAGG,MAAKC,qBAAL,KAA+B,KAHlC,IAIG,MAAKC,oBAAL,KAA8B,KAJjC,IAKG,MAAKC,mBAAL,KAA6B,KALhC,IAMG,MAAKC,uBAAL,KAAiC,KAPxC,EAQE;AACEmB,gBAAIC,SAAJ,GAAgB,SAAhB;AACAD,gBAAIE,SAAJ,GAAc,QAAd;AACA,gBAAIuC,MAAM,MAAK7E,YAAL,GAAoB,CAA9B;AACAoC,gBAAIG,QAAJ,YAAsBsC,GAAtB,mBAAyCrC,QAAQ,CAAjD,EAAoDC,SAAS,CAA7D;AACA,gBAAI,CAAC,MAAK/B,UAAV,EAAsB;AAClBoC,2BAAW,YAAM;AACbb,yBAAK2C,KAAL,GAAa,CAAb;AACA,0BAAKlE,UAAL,GAAkB,KAAlB;AACH,iBAHD,EAGG,IAHH;AAIA,sBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;AACJ,KAtBD;AAuBA,SAAKiE,YAAL,GAAoB,YAAM;AACtB,YAAI,CAAC,MAAKnD,iBAAV,EAA6B;AACzBsB,uBAAW,YAAM;AACb,sBAAKxB,YAAL,CAAkBwD,KAAlB;AACA,sBAAKtD,iBAAL,GAAyB,KAAzB;AACH,aAHD,EAGG,IAHH;AAIA,kBAAKA,iBAAL,GAAyB,IAAzB;AACH;AACD,YAAI,MAAKF,YAAL,CAAkBM,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BQ,gBAAIC,SAAJ,GAAgB,SAAhB;AACAD,gBAAI2C,WAAJ,GAAkB,GAAlB;AACA3C,gBAAI4C,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBxC,KAAnB,EAA0BC,MAA1B;AACAL,gBAAI2C,WAAJ,GAAkB,CAAlB;AACA3C,gBAAIC,SAAJ,GAAgB,SAAhB;AACAD,gBAAIE,SAAJ,GAAc,QAAd;AACA,gBAAI2C,UAAU,MAAK3D,YAAL,CAAkB,CAAlB,CAAd;AACA,gBAAI4D,MAAMD,QAAQE,KAAR,CAAc,GAAd,CAAV;AACA,gBAAIC,QAAQ,EAAZ;AACA,gBAAIC,WAAW,EAAf;AACA,mBAAOH,IAAItD,MAAJ,GAAa,CAApB,EAAuB;AACnByD,2BAAWA,SAASC,MAAT,CAAgBJ,IAAI,CAAJ,IAAS,GAAzB,CAAX;AACAK,wBAAQC,GAAR,CAAYH,QAAZ;AACAH,oBAAIJ,KAAJ;AACA,oBAAIO,SAASzD,MAAT,IAAmB,EAAnB,IAAyBsD,IAAItD,MAAJ,KAAe,CAA5C,EAA+C;AAC3CwD,0BAAMvD,IAAN,CAAWwD,QAAX;AACAA,+BAAW,EAAX;AACH;AACJ;AACD,iBAAK,IAAI1D,IAAI,CAAb,EAAgBA,IAAIyD,MAAMxD,MAA1B,EAAkCD,GAAlC,EAAuC;AACnCS,oBAAIG,QAAJ,CAAa6C,MAAMzD,CAAN,CAAb,EAAuBa,QAAQ,CAA/B,EAAkCC,SAAS,CAAT,GAAad,KAAKc,SAAS,IAAd,CAA/C;AACH;AACJ,SAvBD,MAuBO;AACH,kBAAKkB,SAAL;AACH;AACJ,KAlCD;AAmCH","file":"countAndSpawn.js","sourcesContent":["function CountRegister() {\n    this.currentLevel = 0; // 0 is menu\n    this.sinceLastMeteorite = 0;\n    this.nextMeteorite = Math.floor(Math.random() * 300) + 50;\n    this.enemyWait = 0;\n    this.levelFrame = 0;\n    this.levelLengthsInReality = [2500, 3000, 2500, 3000, 8055, 2500, 2500, 3000, 2500, 8055];\n    this.levelLengths = [];\n    this.timeoutSet = false;\n    this.toothAlienInterval = undefined;\n    this.toothAlienIntervalSet = false;\n    this.normalEnemyTimeoutSet = false;\n    this.skullAlienTimeoutSet = false;\n    this.meteoriteTimeoutSet = false;\n    this.bacteriophageTimeoutSet = false;\n    this.bossSpawned = false;\n    this.bossKilled = false;\n    this.gameOver = false;\n    this.finalMessages = [\n        \"Congratulations!!\",\n        \"You have saved our solar system from the alien predators.\",\n        \"All residents of Earth, Mars and Io cannot express \",\n        \"the full extent of their gratitude.\",\n        \"It is now time to invade the home planet of the predators.\",\n        \"Defeat as many foes as you can to get the highest score you can.\",\n        \"This will be your last chance to stock up on supplies from the shop.\",\n        \"After this there is no turning back. We are eternally grateful for\",\n        \"your noble sacrifice. -- the human race\"\n    ];\n    this.messageSlice = this.finalMessages.slice();\n    this.messageTimeoutSet = false;\n    this.bonusLevelSpawnFrequency = 1500;\n    this.createLevelLengthsArray = () => {\n        for (let i = 0; i < this.levelLengthsInReality.length; i++) {\n            this.levelLengths.push(1);\n            this.levelLengths.push(this.levelLengthsInReality[i]);\n        }\n        this.levelLengths.push(1);\n    };\n    this.go = () => {\n        this.level[this.currentLevel]();\n        if (this.currentLevel % 2 === 1 && [9, 19, 21].indexOf(this.currentLevel) === -1) {\n            this.levelFrame++;\n        }\n        if (this.levelFrame >= this.levelLengths[this.currentLevel]) {\n            this.levelFrame = 0;\n            this.currentLevel++;\n            shop.restock();\n        }\n    };\n    this.level = {\n        99: () => {\n            if (this.toothAlienIntervalSet) {\n                clearInterval(this.toothAlienInterval);\n                this.toothAlienIntervalSet = false;\n            }\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.textAlign=\"center\";\n            ctx.fillText(\"GAME OVER\", width / 2, height / 2);\n            let totalScore = p1.score + p1.totalSpent;\n            ctx.fillText(\"TOTAL SCORE: \" + totalScore, width / 2, height * 0.6);\n            if (!this.gameOver) {\n                setTimeout(() => {\n                    if (totalScore > personalBest) {\n                        setCookie(\"dcdjScore\", totalScore.toString(), 365);\n                        personalBest = totalScore;\n                    }\n                    if (isMobile) mouse.x = mouse.y = 0;\n                    this.currentLevel = 0;\n                    p1 = new Player();\n                    enemies = [];\n                    this.gameOver = false;\n                }, 3000);\n                this.gameOver = true;\n            }\n        },\n        1: () => {\n            if (Math.random() > 0.99) {\n                enemies.push(new Enemy(Math.random() * width, 0));\n                this.enemyWait = 0;\n            } else {\n                this.enemyWait++;\n                if (this.enemyWait >= 100) {\n                    enemies.push(new GreenAlien(width / 2, 0));\n                    this.enemyWait = 0;\n                }\n            }\n            if (this.sinceLastMeteorite >= this.nextMeteorite) {\n                enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 5) + 5));\n                this.sinceLastMeteorite = 0;\n                this.nextMeteorite = Math.floor(Math.random() * 300) + 50;\n            } else {\n                this.sinceLastMeteorite++;\n            }\n        },\n        2: () => {\n            this.interlude();\n        },\n        3: () => {\n            if (Math.random() > 0.995) {\n                enemies.push(new Enemy(Math.random() * width, 0));\n                this.enemyWait = 0;\n            } else {\n                this.enemyWait++;\n                if (this.enemyWait >= 100) {\n                    enemies.push(new GreenAlien(width / 2, 0));\n                    this.enemyWait = 0;\n                }\n            }\n            if (Math.random() > 0.99) {\n                enemies.push(new SkullAlien(Math.random() * (width - 100) + 50, 0));\n            }\n            if (this.sinceLastMeteorite >= this.nextMeteorite) {\n                enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 5) + 5));\n                this.sinceLastMeteorite = 0;\n                this.nextMeteorite = Math.floor(Math.random() * 300) + 50;\n            } else {\n                this.sinceLastMeteorite++;\n            }\n        },\n        4: () => {\n            this.interlude();\n        },\n        5: () => {\n            if (!this.toothAlienIntervalSet) {\n                let xGap = width / 6;\n                this.toothAlienInterval = setInterval(() => {\n                    for (let i = 0; i < 5; i++) {\n                        let initialHeight = i % 2 === 0 ? 0 : -100;\n                        enemies.push(new ToothAlien(xGap * (i+1), initialHeight));\n                    }\n                }, 5000);\n                this.toothAlienIntervalSet = true;\n            }\n            if (!this.normalEnemyTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    let rnd = Math.ceil(Math.random() * 6);\n                    let xGap = width / rnd;\n                    for (let i = 0; i < rnd; i++) {\n                        enemies.push(new Enemy(xGap * (i+1), 0 - Math.random() * 100));\n                    }\n                    this.normalEnemyTimeoutSet = false;\n                }, rndSpawnTime);\n                this.normalEnemyTimeoutSet = true;\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n        },\n        6: () => {\n            if (this.toothAlienIntervalSet) {\n                clearInterval(this.toothAlienInterval);\n                this.toothAlienIntervalSet = false;\n            }\n            this.interlude();\n        },\n        7: () => {\n            if (!this.skullAlienTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 300) + 200;\n                setTimeout(() => {\n                    enemies.push(new SkullAlien(Math.floor(Math.random() * (width - 100)) + 50, 0));\n                    this.skullAlienTimeoutSet = false;\n                }, rndSpawnTime);\n                this.skullAlienTimeoutSet = true;\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n            if (!this.toothAlienIntervalSet) {\n                let xGap = width / 6;\n                this.toothAlienInterval = setInterval(() => {\n                    for (let i = 0; i < 5; i++) {\n                        let initialHeight = i % 2 === 0 ? 0 : -100;\n                        enemies.push(new ToothAlien(xGap * (i+1), initialHeight));\n                    }\n                }, 5000);\n                this.toothAlienIntervalSet = true;\n            }\n        },\n        8: () => {\n            if (this.toothAlienIntervalSet) {\n                clearInterval(this.toothAlienInterval);\n                this.toothAlienIntervalSet = false;\n            }\n            this.interlude();\n        },\n        9: () => {\n            if (!this.bossSpawned) {\n                enemies.push(new Boss(width / 2, 0));\n                this.bossSpawned = true;\n            }\n            if (!this.meteoriteTimeoutSet && !this.bossKilled) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n            if (enemies.length === 0) {\n                this.currentLevel = 10;\n                this.bossSpawned = this.bossKilled = false;\n            }\n        },\n        10: () => {\n            this.interlude();\n        },\n        11: () => {\n            if (Math.random() > 0.98) {\n                enemies.push(new EyeballAlien(Math.random() * width, 0));\n                this.enemyWait = 0;\n            } else {\n                this.enemyWait++;\n                if (this.enemyWait >= 100) {\n                    enemies.push(new GreenAlien(width / 2, 0));\n                    this.enemyWait = 0;\n                }\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n        },\n        12: () => {\n            this.interlude();\n        },\n        13: () => {\n            if (!this.normalEnemyTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 600) + 20;\n                let enemyChoices = [Enemy, SkullAlien, EyeballAlien];\n                setTimeout(() => {\n                    enemies.push(new enemyChoices[Math.floor(Math.random() * enemyChoices.length)](Math.floor(Math.random() * (width - 100)) + 50, 0));\n                    this.normalEnemyTimeoutSet = false;\n                }, rndSpawnTime);\n                this.normalEnemyTimeoutSet = true;\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n        },\n        14: () => {\n            this.interlude();\n        },\n        15: () => {\n            if (!this.normalEnemyTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 300;\n                let enemyChoices = [Enemy, SkullAlien, EyeballAlien, TongueAlien];\n                setTimeout(() => {\n                    let rnd = Math.ceil(Math.random() * 6);\n                    let xGap = width / (rnd + 1);\n                    for (let i = 0; i < rnd; i++) {\n                        enemies.push(new enemyChoices[Math.floor(Math.random() * enemyChoices.length)](xGap * (i+1), 0 - Math.random() * 100));\n                    }\n                    this.normalEnemyTimeoutSet = false;\n                }, rndSpawnTime);\n                this.normalEnemyTimeoutSet = true;\n                this.normalEnemyTimeoutSet = true;\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n            if (!this.toothAlienIntervalSet) {\n                let xGap = width / 6;\n                this.toothAlienInterval = setInterval(() => {\n                    for (let i = 0; i < 5; i++) {\n                        let initialHeight = i % 2 === 0 ? 0 : -100;\n                        enemies.push(new ToothAlien(xGap * (i+1), initialHeight));\n                    }\n                }, 5000);\n                this.toothAlienIntervalSet = true;\n            }\n        },\n        16: () => {\n            if (this.toothAlienIntervalSet) {\n                clearInterval(this.toothAlienInterval);\n                this.toothAlienIntervalSet = false;\n            }\n            this.interlude();\n        },\n        17: () => {\n            if (!this.normalEnemyTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1200) + 500;\n                let enemyChoices = [Enemy, SkullAlien, EyeballAlien, ToothAlien, TongueAlien];\n                setTimeout(() => {\n                    enemies.push(new enemyChoices[Math.floor(Math.random() * enemyChoices.length)](Math.floor(Math.random() * (width - 100)) + 50, 0));\n                    this.normalEnemyTimeoutSet = false;\n                }, rndSpawnTime);\n                this.normalEnemyTimeoutSet = true;\n            }\n            if (!this.bacteriophageTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Bacteriophage(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 3) + 3));\n                    this.bacteriophageTimeoutSet = false;\n                }, rndSpawnTime);\n                this.bacteriophageTimeoutSet = true;\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n        },\n        18: () => {\n            this.interlude();\n        },\n        19: () => {\n            if (!this.bossSpawned) {\n                enemies.push(new Boss(width / 2, 0));\n                this.bossSpawned = true;\n            }\n            if (!this.meteoriteTimeoutSet && !this.bossKilled) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n            if (enemies.length === 0) {\n                for (let i = 0; i < 50; i++) {\n                    shop.restock();\n                }\n                this.currentLevel = 20;\n                this.bossSpawned = this.bossKilled = false;\n                if (this.messageSlice.length === 0) this.messageSlice = this.finalMessages.slice();\n            }\n        },\n        20: () => {\n            if (this.bonusLevelSpawnFrequency < 1500) this.bonusLevelSpawnFrequency = 1500;\n            if (this.messageSlice.length > 0) {\n                for (let i = 0; i < stars.length; i++) {\n                    stars[i].speed *= 0.98;\n                }\n            }\n            this.gameComplete();\n        },\n        21: () => {\n            if (!this.normalEnemyTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * this.bonusLevelSpawnFrequency) + 200;\n                let enemyChoices = [Enemy, GreenAlien, SkullAlien, EyeballAlien, ToothAlien, TongueAlien];\n                setTimeout(() => {\n                    let rnd = Math.ceil(Math.random() * 6);\n                    let xGap = width / (rnd + 1);\n                    for (let i = 0; i < rnd; i++) {\n                        enemies.push(new enemyChoices[Math.floor(Math.random() * enemyChoices.length)](xGap * (i+1), 0 - Math.random() * 100));\n                    }\n                    if (this.bonusLevelSpawnFrequency > 20) this.bonusLevelSpawnFrequency -= 20;\n                    this.normalEnemyTimeoutSet = false;\n                }, rndSpawnTime);\n                this.normalEnemyTimeoutSet = true;\n            }\n            if (!this.bacteriophageTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Bacteriophage(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 3) + 3));\n                    this.bacteriophageTimeoutSet = false;\n                }, rndSpawnTime);\n                this.bacteriophageTimeoutSet = true;\n            }\n            if (!this.meteoriteTimeoutSet) {\n                let rndSpawnTime = Math.floor(Math.random() * 1500) + 200;\n                setTimeout(() => {\n                    enemies.push(new Meteorite(Math.floor(Math.random() * (width - 100)) + 50, 0, Math.floor(Math.random() * 7) + 5));\n                    this.meteoriteTimeoutSet = false;\n                }, rndSpawnTime);\n                this.meteoriteTimeoutSet = true;\n            }\n            if (!this.toothAlienIntervalSet) {\n                let xGap = width / 6;\n                this.toothAlienInterval = setInterval(() => {\n                    for (let i = 0; i < 5; i++) {\n                        let initialHeight = i % 2 === 0 ? 0 : -100;\n                        enemies.push(new ToothAlien(xGap * (i+1), initialHeight));\n                    }\n                }, 5000);\n                this.toothAlienIntervalSet = true;\n            }\n        }\n    };\n    this.interlude = () => {\n        if (\n            enemies.length === 0\n            && shop.stage === 0\n            && this.toothAlienIntervalSet === false\n            && this.normalEnemyTimeoutSet === false\n            && this.skullAlienTimeoutSet === false\n            && this.meteoriteTimeoutSet === false\n            && this.bacteriophageTimeoutSet === false\n        ) {\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.textAlign=\"center\";\n            let lvl = this.currentLevel / 2;\n            ctx.fillText(`LEVEL ${lvl} COMPLETE!!!`, width / 2, height / 2);\n            if (!this.timeoutSet) {\n                setTimeout(() => {\n                    shop.stage = 1;\n                    this.timeoutSet = false;\n                }, 2500);\n                this.timeoutSet = true;\n            }\n        }\n    };\n    this.gameComplete = () => {\n        if (!this.messageTimeoutSet) {\n            setTimeout(() => {\n                this.messageSlice.shift();\n                this.messageTimeoutSet = false;\n            }, 3500);\n            this.messageTimeoutSet = true;\n        }\n        if (this.messageSlice.length > 0) {\n            ctx.fillStyle = \"#000000\";\n            ctx.globalAlpha = 0.3;\n            ctx.fillRect(0, 0, width, height);\n            ctx.globalAlpha = 1;\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.textAlign=\"center\";\n            let message = this.messageSlice[0];\n            let arr = message.split(\" \");\n            let lines = [];\n            let toConcat = \"\";\n            while (arr.length > 0) {\n                toConcat = toConcat.concat(arr[0] + \" \");\n                console.log(toConcat);\n                arr.shift();\n                if (toConcat.length >= 20 || arr.length === 0) {\n                    lines.push(toConcat);\n                    toConcat = \"\";\n                }\n            }\n            for (let i = 0; i < lines.length; i++) {\n                ctx.fillText(lines[i], width / 2, height / 2 + i * (height * 0.03));\n            }\n        } else {\n            this.interlude();\n        }\n    }\n}"]}